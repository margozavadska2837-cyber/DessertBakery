## 4. docs/api/openapi.yaml
```yaml
openapi: 3.0.3
info:
  title: Dessert & Bakery API
  version: 1.0.0
  description: CRUD API для управління продуктами (десертами)
servers:
  - url: http://localhost:3000

paths:
  /products:
    get:
      summary: Отримати список продуктів
      responses:
        '200':
          description: Список продуктів
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Створити новий продукт
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateDTO'
      responses:
        '201':
          description: Продукт створено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Некоректні дані
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /products/{id}:
    get:
      summary: Отримати продукт за ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Знайдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Не знайдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Оновити продукт
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdateDTO'
      responses:
        '200':
          description: Оновлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Некоректні дані
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Не знайдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Видалити продукт
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Видалено
        '404':
          description: Не знайдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /health:
    get:
      summary: Перевірка стану сервісу
      responses:
        '200':
          description: Сервіс працює
          content:
            text/plain:
              schema:
                type: string
                example: ok

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
        description:
          type: string
        price:
          type: number
        currency:
          type: string
          example: "UAH"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ProductCreateDTO:
      type: object
      required: [name, price]
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
        currency:
          type: string
          example: "UAH"
    ProductUpdateDTO:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
        currency:
          type: string
          example: "UAH"
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "ApiError"
        code:
          type: string
          example: "VALIDATION_ERROR"
        details:
          type: array
          items:
            type: object
        properties:
          field:
            type: string
            example: "name"
          message:
            type: string
            example: "Name is required"
